diff --git a/dist/cjs/createComponent.native.js b/dist/cjs/createComponent.native.js
index 86d3da13fa485e62f44137ea449320db7ec7e877..d27abf8ee06b0791f14e4a254c7f11cb572580be 100644
--- a/dist/cjs/createComponent.native.js
+++ b/dist/cjs/createComponent.native.js
@@ -97,7 +97,8 @@ function createComponent(staticConfig) {
     defaultProps,
     defaultPropsKeyOrder: defaultProps ? Object.keys(defaultProps) : []
   });
-  var component = /* @__PURE__ */ import_react.default.forwardRef(function(propsIn, forwardedRef) {
+  
+  var OldComponent = /* @__PURE__ */ import_react.default.forwardRef(function(propsIn, forwardedRef) {
     var _hooks_usePropsTransform, _hooks_useEvents, _config_animations, internalID = process.env.NODE_ENV === "development" ? import_react.default.useId() : "";
     if (process.env.NODE_ENV === "development" && startVisualizer && (startVisualizer(), startVisualizer = void 0), !hasSetupBaseViews) {
       var _hooks_getBaseViews;
@@ -558,6 +559,13 @@ If you meant to do this, you can disable this warning - either change untilMeasu
       delete globalThis.willPrint, time.print(), time = null;
     }, 50))), content;
   });
+  // UNISWAP PATCH: Using key to avoid conditionally calling useAnimation hook
+  var component = /* @__PURE__ */ import_react.default.forwardRef(function(propsIn, forwardedRef) {
+    return /* @__PURE__ */ (0, import_jsx_runtime.jsx)(OldComponent, {
+      ref: forwardedRef,
+      ...propsIn,
+    }, "animation" in propsIn ? 1 : 0);
+  });
   staticConfig.componentName && (component.displayName = staticConfig.componentName);
   var res = component;
   (process.env.TAMAGUI_FORCE_MEMO || staticConfig.memo) && (res = /* @__PURE__ */ import_react.default.memo(res)), res.staticConfig = staticConfig;
diff --git a/dist/esm/createComponent.native.js b/dist/esm/createComponent.native.js
index 5c05d1ea28cbcbcaf4cac7bc7826243895b0bae5..e81c77c7b716bf3bfd3c89b1043bb91b86a7dee6 100644
--- a/dist/esm/createComponent.native.js
+++ b/dist/esm/createComponent.native.js
@@ -116,7 +116,7 @@ function createComponent(staticConfig) {
     defaultProps,
     defaultPropsKeyOrder: defaultProps ? Object.keys(defaultProps) : []
   });
-  var component = /* @__PURE__ */React.forwardRef(function (propsIn, forwardedRef) {
+  var OldComponent = /* @__PURE__ */React.forwardRef(function (propsIn, forwardedRef) {
     var _hooks_usePropsTransform,
       _hooks_useEvents,
       _config_animations,
@@ -625,6 +625,13 @@ If you meant to do this, you can disable this warning - either change untilMeasu
     return process.env.NODE_ENV === "development" && time && (time`rest`, globalThis.willPrint || (globalThis.willPrint = !0, setTimeout(function () {
       delete globalThis.willPrint, time.print(), time = null;
     }, 50))), content;
+  });
+    // UNISWAP PATCH: Using key to avoid conditionally calling useAnimation hook
+  var component = /* @__PURE__ */ React.forwardRef(function(propsIn, forwardedRef) {
+    return /* @__PURE__ */ _jsx(OldComponent, {
+      ref: forwardedRef,
+      ...propsIn,
+    }, "animation" in propsIn ? 1 : 0);
   });
   staticConfig.componentName && (component.displayName = staticConfig.componentName);
   var res = component;
